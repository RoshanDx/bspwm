#!/bin/bash

SYSTEM=

if [[ $# -eq 0 || $# -gt 1 ]] ; then
    echo "Unable to run install script, please run with for example 'install desktop/laptop'"
    exit 1
else
	if [[ $1 = "laptop" ]]; then
		SYSTEM="laptop"
	else 
		SYSTEM="dekstop"
	fi	
fi

echo "Installing based on system: $SYSTEM"

echo -ne "
-------------------------------------------------------------------------
                    Install Dependencies
-------------------------------------------------------------------------
"

## GET SU PRIVILEGES
sudo -v
while true; do sudo -n true; sleep 300; kill -0 "$$" || exit; done 2>/dev/null &

# Update Arch
sudo pacman -S archlinux-keyring --noconfirm
sudo pacman -Syu --noconfirm

# Install AUR Yay
cd /opt/
sudo git clone https://aur.archlinux.org/yay-bin.git
sudo chown -R $USER ./yay-bin
cd yay-bin
makepkg -si --noconfirm

echo "yay Installed"

pkgs='xorg xorg-xinit neofetch feh polybar rofi neovim vim bspwm sxhkd alacritty thunar zsh ranger nitrogen xsensors unzip dunst 
cronie xclip xdg-utils xdo xdotool firefox btop htop maim lxsession lxappearance 
intellij-idea-community-edition viewnior ueberzug ttf-jetbrains-mono-nerd ttf-jetbrains-mono 
asciiquarium dbeaver geany papirus-icon-theme arc-gtk-theme pulseaudio pulseaudio-alsa pavucontrol pacman-contrib gvfs thunar-volman 
networkmanager network-manager-applet iwd xfce4-settings xdg-user-dirs bluez bluez-utils rofi-calc libreoffice-still kitty imagemagick acpi ufw'

# Install Dependecies
sudo pacman -S --noconfirm $pkgs
echo "Dependencies Installed"

# Install Yay Dependencies
yay -S --noconfirm picom-git ksuperkey betterlockscreen postman-bin ttf-iosevka surfn-icons-git google-chrome networkmanager-dmenu-git tumbler-extra-thumbnailers \
bibata-cursor-theme xidlehook zscroll-git visual-studio-code-bin zsh-theme-powerlevel10k bsp-layout

echo "Yay Dependencies Installed"

echo -ne "
-------------------------------------------------------------------------
                     Set Config
-------------------------------------------------------------------------
"

### Check if a directory does not exist ###
if [ ! -d "/usr/share/fonts/TTF" ] 
then
    echo "Directory /usr/share/fonts/TTF DOES NOT exists. Creating a new one" 
    sudo mkdir /usr/share/fonts/TTF
fi

cd ~
mkdir Downloads Pictures Documents Videos dev
mkdir ~/Pictures/screenshots ~/Pictures/wallpapers
sudo mkdir /usr/share/backgrounds

# Copy User's Config
cd ~/repo/bspwm
cp -r .config/* ~/.config
cp .profile .xinitrc .Xresources .Xauthority ~/
sudo cp wallpaper/samurai.jpg /usr/share/backgrounds/
echo "Config folder copied"

#Copy User's Script
cp -r .local ~/

if [[ $SYSTEM = "desktop" ]]; then
    cd ~/.local/bin
    rm -rf changebrightness chargingnotify batterynotify
    cd ~/repo/bspwm
fi

echo "User's Script Copied"

#Copy Fonts
sudo cp -r fonts/. /usr/share/fonts/
echo "Fonts Copied"

# Laptop config
if [[ $SYSTEM = "laptop" ]]; then

    #Set Cronjob
	lines="*/5 * * * * /home/$USER/.local/bin/batterynotify"
    echo "$lines" | sudo crontab -u $USER

    # Set Udev Rules
    sudo cp bspwm/udev-rules/* /etc/udev/rules.d/
    echo "Udev rules Copied"
fi	


echo -ne "

-------------------------------------------------------------------------
                    3rd Apps
-------------------------------------------------------------------------
"

cd ~/repo

# Password Manager (1Password)
curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --import
git clone https://aur.archlinux.org/1password.git
cd 1password
makepkg -si --noconfirm
echo "Password Manager Installed"
cd ..

# Tdrop
git clone https://github.com/noctuid/tdrop.git
cd tdrop
sudo make install
echo "Tdrop Installed"
cd ..

if [[ $SYSTEM = "laptop" ]]; then
    # Brillo
    git clone https://github.com/CameronNemo/brillo.git
    cd brillo
    sudo make install.setgid
    echo "Brillo Installed"
    cd ..

    # Nbfc-linux    
    git clone https://github.com/nbfc-linux/nbfc-linux.git
    cd nbfc-linux
    sudo make install
    echo "Nbfc-linux Installed"
    cd ..

    # Auto-Cpufreq
    git clone https://github.com/AdnanHodzic/auto-cpufreq.git
    cd auto-cpufreq && sudo ./auto-cpufreq-installer
    sudo auto-cpufreq --install
    echo "Auto-Cpufreq Installed"
    cd ..

fi


echo -ne "
-------------------------------------------------------------------------
                    Enabling Essential Services
-------------------------------------------------------------------------
"
systemctl enable NetworkManager
echo "NetworkManager enabled"

echo -ne "
-------------------------------------------------------------------------
                    Setup Firewall Rules
-------------------------------------------------------------------------
"

sudo ufw limit 22/tcp
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw enable

echo -ne "
-------------------------------------------------------------------------
                    Setup Zsh
-------------------------------------------------------------------------
"
cd ~/.config/zsh/plugins/
git clone https://github.com/MichaelAquilina/zsh-you-should-use.git
git clone https://github.com/zsh-users/zsh-autosuggestions.git
git clone https://github.com/zsh-users/zsh-history-substring-search.git
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
cd ~
sudo ln ~/.config/zsh/.zshrc .zshrc
sudo chsh -s /bin/zsh
chsh -s /bin/zsh

echo -ne "
-------------------------------------------------------------------------
                    Setup Login Manager
-------------------------------------------------------------------------
"

sudo pacman -S --noconfirm lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings
echo "LightDM Installed"
sudo systemctl enable lightdm
echo "LightDM enabled"

sudo pacman -S --noconfirm lightdm-slick-greeter
echo "LightDM Slick Greeter Installed"
sudo sed -i "s/#greeter-session=.*/greeter-session=lightdm-slick-greeter/g" lightdm.conf
echo "[Greeter]
background=/usr/share/backgrounds/samurai.jpg" | sudo tee /etc/lightdm/slick-greeter.conf

echo -ne "
-------------------------------------------------------------------------
                    Installation Complete, Please Reboot
-------------------------------------------------------------------------
"